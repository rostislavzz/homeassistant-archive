yeelight:
  devices:
    10.0.0.137:
      name: livingroom_ceiling_light
      transition: 0
      model: ceiling4
      use_music_mode: false
       save_on_change: false
  custom_effects:
    - name: 'Plex'
      flow_params:
        count: 0
        transitions:
          - RGBTransition: [225, 106, 11, 50, 1]
    - name: 'YouTube'
      flow_params:
        count: 0
        transitions:
          - RGBTransition: [225, 0, 0, 50, 1]

light:
  platform: template
  lights:
    livingroom_light:
      friendly_name: 'Свет в гостиной'
      value_template: "{{ is_state('binary_sensor.livingroom_ceiling_light_nightlight', 'off') and is_state('light.livingroom_ceiling_light', 'on') }}"
      turn_on:
        - service: yeelight.set_mode
          data:
            entity_id: light.livingroom_ceiling_light
            mode: 'normal'
        - service: light.turn_off
          entity_id: light.livingroom_ceiling_light_ambilight
      turn_off:
        service: light.turn_off
        entity_id: light.livingroom_ceiling_light, light.livingroom_ceiling_light_ambilight
      set_level:
        service: light.turn_on
        data_template:
          entity_id: light.livingroom_ceiling_light
          brightness: "{{ brightness }}"

    livingroom_nightlight:
      friendly_name: 'Ночник в гостиной'
      value_template: "{{ is_state('binary_sensor.livingroom_ceiling_light_nightlight', 'on') and is_state('light.livingroom_ceiling_light', 'on') }}"
      turn_on:
        service: yeelight.set_mode
        data:
          entity_id: light.livingroom_ceiling_light
          mode: 'moonlight'
      turn_off:
        service: light.turn_off
        entity_id: light.livingroom_ceiling_light
      set_level:
        service: light.turn_on
        data_template:
          entity_id: light.livingroom_ceiling_light
          brightness: "{{ brightness }}"

automation:
  - alias: 'livingroom_ceiling_light_ambilight_tv_source'
    trigger:
      platform: state
      entity_id: sensor.livingroom_tv_source
    condition:
      condition: or
      conditions:
        - condition: sun
          after: sunset
        - condition: sun
          before: sunrise
        - condition: template
          value_template: "{{ is_state_attr('sensor.0x00158d0001ef4b95_cover', 'state', 'CLOSE') }}"
    action:
      service: script.livingroom_ceiling_light_ambilight
      data_template:
        effect: '{{ trigger.to_state.state }}'

  - alias: 'livingroom_ceiling_light_ambilight_plex_pause'
    trigger:
      platform: state
      entity_id: media_player.plex_plex_lg_oled55b7v_z
      from: 'playing'
      to: 'paused'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: light.livingroom_nightlight
          state: 'on'
        - condition: state
          entity_id: light.livingroom_ceiling_light_ambilight
          state: 'on'
    action:
      service: light.turn_on
      data:
        entity_id: light.livingroom_ceiling_light, light.livingroom_ceiling_light_ambilight
        transition: 5
        brightness: 30

  - alias: 'livingroom_ceiling_light_ambilight_plex_play'
    trigger:
      platform: state
      entity_id: media_player.plex_plex_lg_oled55b7v_z
      from: 'paused'
      to: 'playing'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.livingroom_ceiling_light_nightlight
          state: 'on'
        - condition: state
          entity_id: light.livingroom_ceiling_light_ambilight
          state: 'on'
    action:
      service: script.livingroom_ceiling_light_ambilight
      data_template:
        effect: "{{ states('sensor.livingroom_tv_source') }}"

  - alias: 'livingroom_ceiling_light_ambilight_sunset'
    trigger:
      platform: sun
      event: sunset
    condition:
      condition: state
      entity_id: media_player.livingroom_tv
      state: 'playing'
    action:
      service: script.livingroom_ceiling_light_ambilight
      data_template:
        effect: "{{ states('sensor.livingroom_tv_source') }}"

  - alias: 'livingroom_ceiling_light_tv_off'
    trigger:
      platform: state
      entity_id: media_player.livingroom_tv
      from: 'playing'
      to: 'off'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.livingroom_ceiling_light_nightlight
        state: 'on'
      - condition: state
        entity_id: light.livingroom_ceiling_light_ambilight
        state: 'on'
    action:
      - service: light.turn_off
        entity_id: light.livingroom_ceiling_light_ambilight
      - service: light.turn_on
        data:
          entity_id: light.livingroom_nightlight
          transition: 5
          brightness: 50

script:
  livingroom_ceiling_light_ambilight:
    description: 'Включение ночника и фоновой подсветки люстры'
    fields:
      effect:
        description: 'Эффект'
        example: 'Plex | YouTube'
    sequence:
      - condition: template
        value_template: '{{ effect == "Plex" or effect == "YouTube" }}'
      - service: yeelight.set_mode
        data:
          entity_id: light.livingroom_ceiling_light
          mode: 'moonlight'
      - service: light.turn_on
        data:
          entity_id: light.livingroom_ceiling_light
          transition: 5
          brightness: 6
      - service: light.turn_on
        data_template:
          entity_id: light.livingroom_ceiling_light_ambilight
          transition: 5
          brightness: 1
          effect: '{{ effect }}'
